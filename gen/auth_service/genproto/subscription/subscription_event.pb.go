// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: subscription_event.proto

package subscription

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // e.g., "plan.created", "subscription.cancelled"
	Data          *anypb.Any             `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Time          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_subscription_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_subscription_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Event) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Event) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type PlanPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Features      []string               `protobuf:"bytes,3,rep,name=features,proto3" json:"features,omitempty"`
	Price         float64                `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	DurationDays  int32                  `protobuf:"varint,5,opt,name=duration_days,json=durationDays,proto3" json:"duration_days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlanPayload) Reset() {
	*x = PlanPayload{}
	mi := &file_subscription_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanPayload) ProtoMessage() {}

func (x *PlanPayload) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanPayload.ProtoReflect.Descriptor instead.
func (*PlanPayload) Descriptor() ([]byte, []int) {
	return file_subscription_event_proto_rawDescGZIP(), []int{1}
}

func (x *PlanPayload) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlanPayload) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlanPayload) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *PlanPayload) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PlanPayload) GetDurationDays() int32 {
	if x != nil {
		return x.DurationDays
	}
	return 0
}

type SubscriptionPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PlanId        string                 `protobuf:"bytes,3,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Active        bool                   `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscriptionPayload) Reset() {
	*x = SubscriptionPayload{}
	mi := &file_subscription_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionPayload) ProtoMessage() {}

func (x *SubscriptionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionPayload.ProtoReflect.Descriptor instead.
func (*SubscriptionPayload) Descriptor() ([]byte, []int) {
	return file_subscription_event_proto_rawDescGZIP(), []int{2}
}

func (x *SubscriptionPayload) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubscriptionPayload) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SubscriptionPayload) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *SubscriptionPayload) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *SubscriptionPayload) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *SubscriptionPayload) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

var File_subscription_event_proto protoreflect.FileDescriptor

const file_subscription_event_proto_rawDesc = "" +
	"\n" +
	"\x18subscription_event.proto\x12\x05event\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19google/protobuf/any.proto\"u\n" +
	"\x05Event\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12(\n" +
	"\x04data\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x04data\x12.\n" +
	"\x04time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\"\x88\x01\n" +
	"\vPlanPayload\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bfeatures\x18\x03 \x03(\tR\bfeatures\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x01R\x05price\x12#\n" +
	"\rduration_days\x18\x05 \x01(\x05R\fdurationDays\"\xe1\x01\n" +
	"\x13SubscriptionPayload\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x17\n" +
	"\aplan_id\x18\x03 \x01(\tR\x06planId\x129\n" +
	"\n" +
	"start_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12\x16\n" +
	"\x06active\x18\x06 \x01(\bR\x06activeB$Z\"auth_service/genproto/subscriptionb\x06proto3"

var (
	file_subscription_event_proto_rawDescOnce sync.Once
	file_subscription_event_proto_rawDescData []byte
)

func file_subscription_event_proto_rawDescGZIP() []byte {
	file_subscription_event_proto_rawDescOnce.Do(func() {
		file_subscription_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_subscription_event_proto_rawDesc), len(file_subscription_event_proto_rawDesc)))
	})
	return file_subscription_event_proto_rawDescData
}

var file_subscription_event_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_subscription_event_proto_goTypes = []any{
	(*Event)(nil),                 // 0: event.Event
	(*PlanPayload)(nil),           // 1: event.PlanPayload
	(*SubscriptionPayload)(nil),   // 2: event.SubscriptionPayload
	(*anypb.Any)(nil),             // 3: google.protobuf.Any
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_subscription_event_proto_depIdxs = []int32{
	3, // 0: event.Event.data:type_name -> google.protobuf.Any
	4, // 1: event.Event.time:type_name -> google.protobuf.Timestamp
	4, // 2: event.SubscriptionPayload.start_date:type_name -> google.protobuf.Timestamp
	4, // 3: event.SubscriptionPayload.end_date:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_subscription_event_proto_init() }
func file_subscription_event_proto_init() {
	if File_subscription_event_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_subscription_event_proto_rawDesc), len(file_subscription_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_subscription_event_proto_goTypes,
		DependencyIndexes: file_subscription_event_proto_depIdxs,
		MessageInfos:      file_subscription_event_proto_msgTypes,
	}.Build()
	File_subscription_event_proto = out.File
	file_subscription_event_proto_goTypes = nil
	file_subscription_event_proto_depIdxs = nil
}
