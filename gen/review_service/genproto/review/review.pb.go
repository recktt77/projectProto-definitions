// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: review/review.proto

package review

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Модель отзыва
type Review struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId     string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ReviewerId    string                 `protobuf:"bytes,3,opt,name=reviewer_id,json=reviewerId,proto3" json:"reviewer_id,omitempty"`
	RevieweeId    string                 `protobuf:"bytes,4,opt,name=reviewee_id,json=revieweeId,proto3" json:"reviewee_id,omitempty"`
	Rating        int32                  `protobuf:"varint,5,opt,name=rating,proto3" json:"rating,omitempty"` // 1–5
	Comment       string                 `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Review) Reset() {
	*x = Review{}
	mi := &file_review_review_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Review) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Review) ProtoMessage() {}

func (x *Review) ProtoReflect() protoreflect.Message {
	mi := &file_review_review_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Review.ProtoReflect.Descriptor instead.
func (*Review) Descriptor() ([]byte, []int) {
	return file_review_review_proto_rawDescGZIP(), []int{0}
}

func (x *Review) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Review) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Review) GetReviewerId() string {
	if x != nil {
		return x.ReviewerId
	}
	return ""
}

func (x *Review) GetRevieweeId() string {
	if x != nil {
		return x.RevieweeId
	}
	return ""
}

func (x *Review) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Review) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

// Запрос на отправку отзыва
type LeaveReviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ReviewerId    string                 `protobuf:"bytes,2,opt,name=reviewer_id,json=reviewerId,proto3" json:"reviewer_id,omitempty"`
	RevieweeId    string                 `protobuf:"bytes,3,opt,name=reviewee_id,json=revieweeId,proto3" json:"reviewee_id,omitempty"`
	Rating        int32                  `protobuf:"varint,4,opt,name=rating,proto3" json:"rating,omitempty"`
	Comment       string                 `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveReviewRequest) Reset() {
	*x = LeaveReviewRequest{}
	mi := &file_review_review_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveReviewRequest) ProtoMessage() {}

func (x *LeaveReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_review_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveReviewRequest.ProtoReflect.Descriptor instead.
func (*LeaveReviewRequest) Descriptor() ([]byte, []int) {
	return file_review_review_proto_rawDescGZIP(), []int{1}
}

func (x *LeaveReviewRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *LeaveReviewRequest) GetReviewerId() string {
	if x != nil {
		return x.ReviewerId
	}
	return ""
}

func (x *LeaveReviewRequest) GetRevieweeId() string {
	if x != nil {
		return x.RevieweeId
	}
	return ""
}

func (x *LeaveReviewRequest) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *LeaveReviewRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type LeaveReviewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveReviewResponse) Reset() {
	*x = LeaveReviewResponse{}
	mi := &file_review_review_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveReviewResponse) ProtoMessage() {}

func (x *LeaveReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_review_review_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveReviewResponse.ProtoReflect.Descriptor instead.
func (*LeaveReviewResponse) Descriptor() ([]byte, []int) {
	return file_review_review_proto_rawDescGZIP(), []int{2}
}

func (x *LeaveReviewResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Получение отзывов по project_id или reviewee_id
type GetReviewsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RevieweeId    string                 `protobuf:"bytes,2,opt,name=reviewee_id,json=revieweeId,proto3" json:"reviewee_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReviewsRequest) Reset() {
	*x = GetReviewsRequest{}
	mi := &file_review_review_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReviewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewsRequest) ProtoMessage() {}

func (x *GetReviewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_review_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewsRequest.ProtoReflect.Descriptor instead.
func (*GetReviewsRequest) Descriptor() ([]byte, []int) {
	return file_review_review_proto_rawDescGZIP(), []int{3}
}

func (x *GetReviewsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetReviewsRequest) GetRevieweeId() string {
	if x != nil {
		return x.RevieweeId
	}
	return ""
}

type GetReviewsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reviews       []*Review              `protobuf:"bytes,1,rep,name=reviews,proto3" json:"reviews,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReviewsResponse) Reset() {
	*x = GetReviewsResponse{}
	mi := &file_review_review_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReviewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewsResponse) ProtoMessage() {}

func (x *GetReviewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_review_review_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewsResponse.ProtoReflect.Descriptor instead.
func (*GetReviewsResponse) Descriptor() ([]byte, []int) {
	return file_review_review_proto_rawDescGZIP(), []int{4}
}

func (x *GetReviewsResponse) GetReviews() []*Review {
	if x != nil {
		return x.Reviews
	}
	return nil
}

// Запрос на модерацию (например, удалить или скрыть отзыв)
type ModerateReviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewId      string                 `protobuf:"bytes,1,opt,name=review_id,json=reviewId,proto3" json:"review_id,omitempty"`
	Action        string                 `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"` // "delete", "hide", "approve"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModerateReviewRequest) Reset() {
	*x = ModerateReviewRequest{}
	mi := &file_review_review_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModerateReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModerateReviewRequest) ProtoMessage() {}

func (x *ModerateReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_review_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModerateReviewRequest.ProtoReflect.Descriptor instead.
func (*ModerateReviewRequest) Descriptor() ([]byte, []int) {
	return file_review_review_proto_rawDescGZIP(), []int{5}
}

func (x *ModerateReviewRequest) GetReviewId() string {
	if x != nil {
		return x.ReviewId
	}
	return ""
}

func (x *ModerateReviewRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type ModerateReviewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModerateReviewResponse) Reset() {
	*x = ModerateReviewResponse{}
	mi := &file_review_review_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModerateReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModerateReviewResponse) ProtoMessage() {}

func (x *ModerateReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_review_review_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModerateReviewResponse.ProtoReflect.Descriptor instead.
func (*ModerateReviewResponse) Descriptor() ([]byte, []int) {
	return file_review_review_proto_rawDescGZIP(), []int{6}
}

func (x *ModerateReviewResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_review_review_proto protoreflect.FileDescriptor

const file_review_review_proto_rawDesc = "" +
	"\n" +
	"\x13review/review.proto\x12\x06review\"\xab\x01\n" +
	"\x06Review\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId\x12\x1f\n" +
	"\vreviewer_id\x18\x03 \x01(\tR\n" +
	"reviewerId\x12\x1f\n" +
	"\vreviewee_id\x18\x04 \x01(\tR\n" +
	"revieweeId\x12\x16\n" +
	"\x06rating\x18\x05 \x01(\x05R\x06rating\x12\x18\n" +
	"\acomment\x18\x06 \x01(\tR\acomment\"\xa7\x01\n" +
	"\x12LeaveReviewRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1f\n" +
	"\vreviewer_id\x18\x02 \x01(\tR\n" +
	"reviewerId\x12\x1f\n" +
	"\vreviewee_id\x18\x03 \x01(\tR\n" +
	"revieweeId\x12\x16\n" +
	"\x06rating\x18\x04 \x01(\x05R\x06rating\x12\x18\n" +
	"\acomment\x18\x05 \x01(\tR\acomment\"/\n" +
	"\x13LeaveReviewResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"S\n" +
	"\x11GetReviewsRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1f\n" +
	"\vreviewee_id\x18\x02 \x01(\tR\n" +
	"revieweeId\">\n" +
	"\x12GetReviewsResponse\x12(\n" +
	"\areviews\x18\x01 \x03(\v2\x0e.review.ReviewR\areviews\"L\n" +
	"\x15ModerateReviewRequest\x12\x1b\n" +
	"\treview_id\x18\x01 \x01(\tR\breviewId\x12\x16\n" +
	"\x06action\x18\x02 \x01(\tR\x06action\"2\n" +
	"\x16ModerateReviewResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2\xed\x01\n" +
	"\rReviewService\x12F\n" +
	"\vLeaveReview\x12\x1a.review.LeaveReviewRequest\x1a\x1b.review.LeaveReviewResponse\x12C\n" +
	"\n" +
	"GetReviews\x12\x19.review.GetReviewsRequest\x1a\x1a.review.GetReviewsResponse\x12O\n" +
	"\x0eModerateReview\x12\x1d.review.ModerateReviewRequest\x1a\x1e.review.ModerateReviewResponseB Z\x1ereview_service/genproto/reviewb\x06proto3"

var (
	file_review_review_proto_rawDescOnce sync.Once
	file_review_review_proto_rawDescData []byte
)

func file_review_review_proto_rawDescGZIP() []byte {
	file_review_review_proto_rawDescOnce.Do(func() {
		file_review_review_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_review_review_proto_rawDesc), len(file_review_review_proto_rawDesc)))
	})
	return file_review_review_proto_rawDescData
}

var file_review_review_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_review_review_proto_goTypes = []any{
	(*Review)(nil),                 // 0: review.Review
	(*LeaveReviewRequest)(nil),     // 1: review.LeaveReviewRequest
	(*LeaveReviewResponse)(nil),    // 2: review.LeaveReviewResponse
	(*GetReviewsRequest)(nil),      // 3: review.GetReviewsRequest
	(*GetReviewsResponse)(nil),     // 4: review.GetReviewsResponse
	(*ModerateReviewRequest)(nil),  // 5: review.ModerateReviewRequest
	(*ModerateReviewResponse)(nil), // 6: review.ModerateReviewResponse
}
var file_review_review_proto_depIdxs = []int32{
	0, // 0: review.GetReviewsResponse.reviews:type_name -> review.Review
	1, // 1: review.ReviewService.LeaveReview:input_type -> review.LeaveReviewRequest
	3, // 2: review.ReviewService.GetReviews:input_type -> review.GetReviewsRequest
	5, // 3: review.ReviewService.ModerateReview:input_type -> review.ModerateReviewRequest
	2, // 4: review.ReviewService.LeaveReview:output_type -> review.LeaveReviewResponse
	4, // 5: review.ReviewService.GetReviews:output_type -> review.GetReviewsResponse
	6, // 6: review.ReviewService.ModerateReview:output_type -> review.ModerateReviewResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_review_review_proto_init() }
func file_review_review_proto_init() {
	if File_review_review_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_review_review_proto_rawDesc), len(file_review_review_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_review_review_proto_goTypes,
		DependencyIndexes: file_review_review_proto_depIdxs,
		MessageInfos:      file_review_review_proto_msgTypes,
	}.Build()
	File_review_review_proto = out.File
	file_review_review_proto_goTypes = nil
	file_review_review_proto_depIdxs = nil
}
