syntax = "proto3";

package subscription;

import "google/protobuf/timestamp.proto";

option go_package = "auth_service/genproto/subscription";

// ---------- Plan Messages ----------

message Plan {
  string id = 1;
  string name = 2;
  repeated string features = 3;
  double price = 4;
  int32 duration_days = 5;
}

message PlanFilter {
  string id = 1;
  string name = 2;
  repeated string features = 3;
  double price = 4;
  int32 duration_days = 5;
}

message PlanUpdate {
  string id = 1;
  string name = 2;
  repeated string features = 3;
  double price = 4;
  int32 duration_days = 5;
}

message CreatePlanRequest {
  Plan plan = 1;
}

message CreatePlanResponse {
  string message = 1;
}

message GetPlanByIDRequest {
  PlanFilter filter = 1;
}

message GetPlanByIDResponse {
  Plan plan = 1;
}

message UpdatePlanRequest {
  PlanFilter filter = 1;
  PlanUpdate update = 2;
}

message UpdatePlanResponse {
  string message = 1;
}

message GetListOfPlansRequest {
  PlanFilter filter = 1;
}

message GetListOfPlansResponse {
  repeated Plan plans = 1;
}

// ---------- Subscription Messages ----------

message Subscription {
  string id = 1;
  string user_id = 2;
  string plan_id = 3;
  google.protobuf.Timestamp start_date = 4;
  google.protobuf.Timestamp end_date = 5;
  bool active = 6;
}

message SubscribeRequest {
  string user_id = 1;
  string plan_id = 2;
}

message SubscribeResponse {
  Subscription subscription = 1;
}

message CancelSubscriptionRequest {
  string subscription_id = 1;
}

message CancelSubscriptionResponse {
  string message = 1;
}

message GetSubscriptionRequest {
  string user_id = 1;
}

message GetSubscriptionResponse {
  repeated Subscription subscriptions = 1;
}

message GetSubscriptionStatusRequest {
  string user_id = 1;
}

message GetSubscriptionStatusResponse {
  Subscription subscription = 1;
}

// ---------- Service ----------

service SubscriptionService {
  // Plan management
  rpc CreatePlan(CreatePlanRequest) returns (CreatePlanResponse);
  rpc GetPlanByID(GetPlanByIDRequest) returns (GetPlanByIDResponse);
  rpc UpdatePlan(UpdatePlanRequest) returns (UpdatePlanResponse);
  rpc GetListOfPlans(GetListOfPlansRequest) returns (GetListOfPlansResponse);

  // Subscription management
  rpc Subscribe(SubscribeRequest) returns (SubscribeResponse);
  rpc CancelSubscription(CancelSubscriptionRequest) returns (CancelSubscriptionResponse);
  rpc GetSubscription(GetSubscriptionRequest) returns (GetSubscriptionResponse);
  rpc GetSubscriptionStatus(GetSubscriptionStatusRequest) returns (GetSubscriptionStatusResponse);
}
